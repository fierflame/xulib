{"version":3,"sources":["webpack://xulib/webpack/universalModuleDefinition","webpack://xulib/webpack/bootstrap","webpack://xulib/./src/event.ts","webpack://xulib/./src/timer.ts","webpack://xulib/./src/util.ts","webpack://xulib/./src/funcctrl.ts","webpack://xulib/./src/init.ts","webpack://xulib/./src/uri.ts","webpack://xulib/./src/cmd.ts","webpack://xulib/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","event","Event","[object Object]","eventName","args","emit","names","listenerCount","listeners","listener","addListener","prependListener","once","prependOnceListener","removeListener","removeAllListeners","on","off","constructor","this","_linsters","list","length","e","splice","keys","map","push","unshift","Timer","timer_defineProperty","_pausing","_pause","_paused","_begin","getTime","f","_this","_asyncToGenerator","Promise","canceled","cancelError","undefined","cancel","next","resolve","reject","error","ms","nextRescissible","setTimeout","clearTimeout","gl","requestAnimationFrame","cancelAnimationFrame","performance","now","Date","run","pause","paused","time","copyObject","base","to","Array","x","ret","forEach","String","Boolean","Number","k","merge","_ref","funcctrl_asyncToGenerator","argv","_x","apply","arguments","queue","max","wait","_ref2","shift","_x2","isArray","ignore","end","getEndFunc","getNextParam","setNextParam","exec","_x3","_exec","_ref3","f1","f2","_x4","initState","inited","init","item","then","_","catch","uninitHandle","uriScheme","getUriScheme","uri","toLowerCase","set","scheme","open","test","clean","_open","replace","schemeName","getUri","url","uriMethod","uri_asyncToGenerator","compare","a","b","parse","stringify","normalize","execHook","methods","setHook","hook","execOperFunc","methodName","funcName","def","method","func","operation","oper","execTip","execTitle","assign","substr","indexOf","v","decodeURIComponent","setOperation","id","clearOperation","setMethod","clearMethod","cmdMethod","cmd_asyncToGenerator","__webpack_exports__","src_event","timer","util_namespaceObject","funcctrl_namespaceObject","src_init","uri_namespaceObject","cmd_namespaceObject"],"mappings":"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","file":"xulib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xulib\"] = factory();\n\telse\n\t\troot[\"xulib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export type EventListener = (...args: any[]) => void;\nlet event: Event;\nclass Event{\n\n\tstatic emit(eventName: string, ...args: any[]): void { return event.emit(eventName, ...args); }\n\tstatic names(): string[] {return event.names(); }\n\tstatic listenerCount(eventName: string): number { return event.listenerCount(eventName); }\n\tstatic listeners(eventName: string): Array<EventListener> { return event.listeners(eventName);}\n\tstatic addListener(eventName: string, listener: EventListener): void { return event.addListener(eventName, listener); }\n\tstatic prependListener(eventName: string, listener: EventListener): void { return event.prependListener(eventName, listener);}\n\tstatic once(eventName: string, listener: EventListener): void { return event.once(eventName, listener);}\n\tstatic prependOnceListener(eventName: string, listener: EventListener): void { return event.prependOnceListener(eventName, listener);}\n\tstatic removeListener(eventName: string, listener: EventListener): void { return event.removeListener(eventName, listener);}\n\tstatic removeAllListeners(eventName?: string): void { return event.removeAllListeners(eventName);}\n\tstatic on(eventName: string, listener: EventListener): void { return event.on(eventName, listener);}\n\tstatic off(eventName: string, listener: EventListener): void { return event.off(eventName, listener);}\n\n\t_linsters: { [key: string]: [EventListener, boolean?][]} = {};\n\tconstructor() {\n\t\tthis._linsters = {};\n\t}\n\n\temit(eventName: string, ...args: any[]): void {\n\t\tlet list = this._linsters[eventName];\n\t\tif (!list) {return ;}\n\t\tfor (let i = 0, l = list.length; i < l;) {\n\t\t\tlet [listener, once] = list[i];\n\t\t\ttry {listener(...args);}catch(e){}\n\t\t\tif (once) { list.splice(i, 1); l--; }\n\t\t\telse { i++; }\n\t\t}\n\t\tif (!list.length) {delete this._linsters[eventName];}\n\t}\n\n\tnames(): string[] {\n\t\treturn Object.keys(this._linsters);\n\t}\n\tlistenerCount(eventName: string): number {\n\t\tlet list = this._linsters[eventName];\n\t\treturn list ? list.length : 0;\n\t}\n\tlisteners(eventName: string): Array<EventListener> {\n\t\tlet list = this._linsters[eventName];\n\t\tif (!list) {return [];}\n\t\treturn list.map(([listener]) => listener);\n\t}\n\taddListener(eventName: string, listener: EventListener): void {\n\t\tif (typeof listener !== 'function') { return; }\n\t\tlet list = this._linsters[eventName];\n\t\tif (!list) {list = this._linsters[eventName] = [];}\n\t\tlist.push([listener]);\n\t}\n\tprependListener(eventName: string, listener: EventListener): void {\n\t\tif (typeof listener !== 'function') { return; }\n\t\tlet list = this._linsters[eventName];\n\t\tif (!list) {list = this._linsters[eventName] = [];}\n\t\tlist.unshift([listener]);\n\t}\n\tonce(eventName: string, listener: EventListener): void {\n\t\tif (typeof listener !== 'function') { return; }\n\t\tlet list = this._linsters[eventName];\n\t\tif (!list) {list = this._linsters[eventName] = [];}\n\t\tlist.push([listener, true]);\n\t}\n\tprependOnceListener(eventName: string, listener: EventListener): void {\n\t\tif (typeof listener !== 'function') { return; }\n\t\tlet list = this._linsters[eventName];\n\t\tif (!list) {list = this._linsters[eventName] = [];}\n\t\tlist.unshift([listener, true]);\n\t}\n\tremoveListener(eventName: string, listener: EventListener): void {\n\t\tif (typeof listener !== 'function') { return; }\n\t\tlet list = this._linsters[eventName];\n\t\tif (!list) {return ;}\n\t\tfor (let i = 0, l = list.length; i < l; i++) {\n\t\t\tif (list[i][0] === listener) {\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!list.length) {delete this._linsters[eventName];}\n\t}\n\tremoveAllListeners(eventName?: string): void {\n\t\tif (!eventName) { this._linsters = {}; }\n\t\telse { delete this._linsters[eventName]; }\n\t}\n\ton(eventName: string, listener: EventListener): void {\n\t\treturn this.addListener(eventName, listener);\n\t}\n\toff(eventName: string, listener: EventListener): void {\n\t\treturn this.removeListener(eventName, listener);\n\t}\n}\n\nevent = new Event;\nexport default Event;\n","/** 计时器 */\r\nclass Timer {\r\n\t//暂停状态\r\n\t_pausing = false;\r\n\t//暂停开始时间\r\n\t_pause = 0;\r\n\t//已暂停时间\r\n\t_paused = 0;\r\n\t//初始化时间\r\n\t_begin = 0;\r\n\tconstructor() {\r\n\t\tthis._pausing = false;\r\n\t\tthis._pause = 0;\r\n\t\tthis._paused = 0;\r\n\t\tthis._begin = Timer.getTime();\r\n\t}\r\n\tstatic async next<T, P, R>(this: T, f: (this: T, r: (value?: R | PromiseLike<R>) => void, ...p: P[]) => any, ...p: P[]): Promise<R> {\r\n\t\treturn new Promise(r => f.call(this, r, ...p));\r\n\t}\r\n\tstatic nextRescissible<T, I, P, R>(this: T, f: (this: T, r: (value?: R | PromiseLike<R>) => I, ...p: P[]) => any, c: (t: I) => void, ...p: P[]): Promise<R> & { cancel(error?: any): void} {\r\n\t\tlet canceled = false;\r\n\t\tlet cancelError = undefined;\r\n\t\tlet cancel: undefined | ((error?: any) => void) = undefined;\r\n\t\tconst next = new Promise((resolve, reject) => {\r\n\t\t\tif (canceled) { return cancelError === undefined ? resolve() : reject(cancelError); }\r\n\t\t\tconst t = f.call(this, () => {\r\n\t\t\t\tcanceled = true;\r\n\t\t\t\tresolve();\r\n\t\t\t}, ...p);\r\n\t\t\tcancel = (error?: any) => {\r\n\t\t\t\tif (canceled) { return; }\r\n\t\t\t\tcanceled = true;\r\n\t\t\t\tc(t);\r\n\t\t\t\treturn error === undefined ? resolve() : reject(error);\r\n\t\t\t}\r\n\t\t}) as Promise<R> & { cancel(error?: any): void};\r\n\t\tnext.cancel = (error?: any) => {\r\n\t\t\tif (canceled) { return; }\r\n\t\t\tif (cancel) { cancel(error); }\r\n\t\t\tcancelError = error;\r\n\t\t\tcanceled = true;\r\n\t\t}\r\n\t\treturn next;\r\n\t}\r\n\t/** 延时 */\r\n\tstatic delayed(ms: number): Promise<void> & { cancel(error?: any): void} {\r\n\t\treturn Timer.nextRescissible(f => setTimeout(f, ms), clearTimeout);\r\n\t}\r\n\t/** 等待进入下一帧渲染 */\r\n\tstatic async nextFrame(gl: Window): Promise<void> {\r\n\t\treturn Timer.nextRescissible(gl.requestAnimationFrame.bind(gl), gl.cancelAnimationFrame.bind(gl));\r\n\t}\r\n\t/** 获取当前时间 */\r\n\tstatic getTime(): number {\r\n\t\ttry {\r\n\t\t\treturn performance.now();\r\n\t\t} catch (e) { }\r\n\t\treturn +new Date();\r\n\t}\r\n\t/** 继续计时 */\r\n\trun(): void {\r\n\t\tif (!this._pausing) {\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tthis._pausing = false;\r\n\t\tthis._paused += Timer.getTime() - this._pause;\r\n\t}\r\n\t/** 暂停计时 */\r\n\tpause(): void {\r\n\t\tif (this._pausing) {\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tthis._pausing = true;\r\n\t\tthis._pause = Timer.getTime();\r\n\t}\r\n\t/** 已暂停时间 */\r\n\tget paused(): number {\r\n\t\treturn this._paused + (this._pausing ? Timer.getTime() - this._pause : 0);\r\n\t}\r\n\t/** 已经执行时间 */\r\n\tget time(): number {\r\n\t\treturn (this._pausing ? this._pause : Timer.getTime()) - this._begin - this._paused;\r\n\t}\r\n\t/** 获取已经执行时间 */\r\n\tget() {\r\n\t\treturn this.time;\r\n\t}\r\n}\r\nexport default Timer;\r\n","export function copyObject(base: Object | any[], to?: Object | any[]): Object | any[] | undefined {\r\n\tif (!to) {\r\n\t\tif (!base) { return base; }\r\n\t\tif (typeof base === 'function') { return; }\r\n\t\tif (base instanceof Array) { return base.map(x => copyObject(x)) }\r\n\t\tif (typeof base === 'object') {\r\n\t\t\tlet ret = {};\r\n\t\t\tObject.keys(base).forEach(x => ret[x] = copyObject(base[x]));\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t\treturn base;\r\n\t}\r\n\tif (!(base && typeof base === 'object')) { return; }\r\n\tif (!(to && typeof to === 'object')) { return; }\r\n\tif (to instanceof Array) {\r\n\t\tfor (let i = 0; i < to.length; i++) {\r\n\t\t\tif (!(i in base)) { continue; }\r\n\t\t\tswitch (typeof to[i]) {\r\n\t\t\t\tcase 'string': \tto[i] = String(base[i]); break;\r\n\t\t\t\tcase 'boolean': to[i] = Boolean(base[i]); break;\r\n\t\t\t\tcase 'number': to[i] = Number(base[i]); break;\r\n\t\t\t\tcase 'object': if (base) { copyObject(base[i], to[i]); } break;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tfor (let k in to) {\r\n\t\tif (!(k in base)) { continue; }\r\n\t\tswitch (typeof to[k]) {\r\n\t\t\tcase 'string': to[k] = String(base[k]); break;\r\n\t\t\tcase 'boolean': to[k] = Boolean(base[k]); break;\r\n\t\t\tcase 'number': to[k] = Number(base[k]); break;\r\n\t\t\tcase 'object': if (base) { copyObject(base[k], to[k]); } break;\r\n\t\t}\r\n\t}\r\n}\r\n","/** 封装成只会执行一次的函数，封装后函数，只会返回第一次执行时得到的结果(包括抛出的错误) */\nexport function once<T, F, R>(f: (this: T, ...p: F[]) => R): (this: any, ...p: any[]) => R | undefined {\n\tlet run = false;\n\tlet error = false;\n\tlet ret: R;\n\treturn function(this: T, ...p: F[]): R {\n\t\tif (run) {\n\t\t\tif (error) { throw ret; }\n\t\t\treturn ret;\n\t\t}\n\t\trun = true;\n\t\ttry {\n\t\t\treturn ret = f.call(this, ...p);\n\t\t} catch(e) {\n\t\t\terror = true;\n\t\t\tret = e;\n\t\t\tthrow ret;\n\t\t}\n\t}\n}\n/** 封装成合并执行的函数，封装后函数永远返回Promise，上次执行时得到的Promise未结束前，返回的将会是同一个Promise */\nexport function merge<T, P extends any[], R>(f: (this: T, ...argv: P) => R | Promise<R>): (this: T, ...argv: P) => Promise<R | undefined> {\n\tlet ret: Promise<R> | R | undefined;\n\treturn async function (this: T, ...argv: P): Promise<R | undefined> {\n\t\tif (ret) { return ret; }\n\t\ttry {\n\t\t\tret = f.call(this, ...argv);\n\t\t\treturn await ret;\n\t\t} finally {\n\t\t\tret = undefined;\n\t\t}\n\t}\n}\n/** 封装成执行队列，封装后函数永远返回Promise，确保同时执行的函数不超过 max 个，多余执行将会加入队列，直到有Promise完成 */\nexport function queue<T, P extends any[], R>(f: (this: T, ...argv: P) => R | Promise<R>, max?: number): ((this: T, ...argv: P) => Promise<R>);\nexport function queue<T, P extends any[], R>(f: ((this: T, ...argv: P) => R | Promise<R>)[], max?: number): (((this: T, ...argv: P) => Promise<R>) | undefined)[];\nexport function queue<T, P extends any[], R>(\n\tf: ((this: T, ...argv: P) => R | Promise<R>) | ((this: T, ...argv: P) => R | Promise<R>)[],\n\tmax: number = 1\n): ((this: T, ...argv: P) => Promise<R>) | (((this: T, ...argv: P) => Promise<R>) | undefined)[] | undefined {\n\tconst queue: ((...p: any[]) => void)[] = [];\n\tlet wait: number = 0;\n\tfunction next(): void {\n\t\tif (queue.length) {\n\t\t\t(queue.shift() as ((...p: any[]) => void))();\n\t\t} else {\n\t\t\twait--;\n\t\t}\n\t}\n\tfunction getRunStatus(): Promise<void> {\n\t\treturn new Promise(r => wait < max ? r(void wait++) : queue.push(r));\n\t}\n\tfunction get(f: (this: T, ...argv: P) => R | Promise<R>): (this: T, ...argv: P) => Promise<R> {\n\t\treturn async function (this: T, ...argv: P): Promise<R> {\n\t\t\ttry {\n\t\t\t\tawait getRunStatus();\n\t\t\t\treturn await f.call(this, ...argv);\n\t\t\t} finally {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof f === 'function') {\n\t\treturn get(f);\n\t} else if (Array.isArray(f)) {\n\t\treturn f.map(f => typeof f === 'function' ? undefined : get(f));\n\t}\n}\n/** 封装成忽略性执行，封装后函数永远返回Promise，确保同时执行的函数不超过 max 个，多余只保留最后一个，担有一个Promise完成，执行最后一次参数 */\nexport function ignore<T, P, R>(f: (this: T, ...argv: P[]) => R | Promise<R>, max: number = 1): (this: T, ...argv: P[]) => Promise<R> {\n\ttype PromiseBackCall = [(value?: R | PromiseLike<R>) => void, (reason?: any) => void];\n\ttype Param = [T, ...P[]];\n\tlet run: number = 0;\n\tlet next: Param | undefined;\n\tlet end: PromiseBackCall[] = [];\n\tfunction getEndFunc(): PromiseBackCall[] {\n\t\tlet e: PromiseBackCall[] = end;\n\t\tend = [];\n\t\treturn e;\n\t}\n\tfunction getNextParam() {\n\t\tlet p = next;\n\t\tnext = undefined;\n\t\treturn p;\n\t}\n\tfunction setNextParam(p: Param): void {\n\t\tnext = p;\n\t}\n\tasync function exec(p: Param) {\n\t\tif (run >= max) {\n\t\t\treturn setNextParam(p);\n\t\t}\n\t\trun++;\n\t\t//获取上次执行到现在缓存的结束函数\n\t\tconst end: PromiseBackCall[] = getEndFunc();\n\t\t//执行函数\n\t\tlet ret: R, error = false;\n\t\ttry {\n\t\t\tret = await f.call(...p);\n\t\t} catch (e) {\n\t\t\tret = e;\n\t\t\terror = true;\n\t\t}\n\t\t//返回函数\n\t\tfor (let f of end) {\n\t\t\tf[error ? 1 : 0](ret);\n\t\t}\n\t\trun--;\n\t\t//获取下一轮参数\n\t\tconst next: Param | undefined = getNextParam();\n\t\tif (next) {\n\t\t\treturn exec(next);\n\t\t}\n\t}\n\treturn async function (this: T, ...p: P[]) {\n\t\treturn new Promise((f1, f2) => {end.push([f1, f2]); exec([this, ...p]);});\n\t}\n}\n","/** 初始化状态存储 */\r\nlet initState = Promise.resolve();\r\n/** 是否已初始化 */\r\nlet inited = false;\r\n\r\n/** 进行初始化，并返回是否可以继续执行 */\r\nfunction init(): boolean;\r\n/** 等待初始化完成 */\r\nfunction init(wait: true): Promise<true>;\r\n/** 添加初始函数 */\r\nfunction init(item: (() => Promise<any> | any) | Promise<any>): Promise<true>;\r\n/** 进行初始化，并返回是否可以继续执行 */\r\nfunction init(item?: true | (() => Promise<any> | any) | Promise<any>): boolean | Promise<true> {\r\n\tif (item === true) { return initState.then<true>(() => inited = true); }\r\n\tif (item) {\r\n\t\tinitState = initState\r\n\t\t\t.then(_ => typeof item === 'function' ? item() : item)\r\n\t\t\t.catch(() => true);\r\n\t\treturn initState.then<true>(() => inited = true);;\r\n\t}\r\n\tif (inited) { return true; }\r\n\tif (typeof init.uninitHandle === 'function') {\r\n\t\ttry { init.uninitHandle(); } catch(e){}\r\n\t}\r\n\treturn false;\r\n}\r\ninit.uninitHandle = undefined as undefined | (() => any);\r\n\r\nexport default init as {\r\n\t/** 进行初始化，并返回是否可以继续执行 */\r\n\t(): boolean;\r\n\t/** 等待初始化完成 */\r\n\t(wait: true): Promise<true>;\r\n\t/** 添加初始函数 */\r\n\t(item: (() => Promise<any> | any) | Promise<any>): Promise<true>;\r\n\t/** 未初始化时调用的方法 */\r\n\tuninitHandle: undefined | (() => any);\r\n};\r\n","export interface Method {\n\topen(this: Method, uri: string, replace?: boolean): Promise<boolean>;\n\ttest?(this: Method, uri: string): boolean;\n}\n\ntype test = (uri: string) => boolean;\n\nlet uriScheme: { [key: string]: Method } = {};\n/**\n * 获取 URL Scheme\n * @param uri 要获取 Scheme 的 URI\n */\nfunction getUriScheme(uri?: string): string {\n\tif (!uri) { return ''; }\n\tlet [, s] = /^([a-z\\-\\+0-9\\.]+)\\:/i.exec(uri) || [, ''];\n\treturn s.toLowerCase();\n}\n/**\n * 设置 URI 处理方法\n * @param scheme\n */\nexport function set(scheme: string, { open, test }: Method): boolean {\n\tif (!(scheme && typeof scheme === 'string')) { return false; }\n\tif (!(typeof open === 'function')) { return false; }\n\t[, scheme] = /^([a-z\\-\\+0-9\\.]+)\\:?$/i.exec(scheme) || [, ''];\n\tif (!scheme) {return false;}\n\tif (!(typeof test === 'function')) { test = undefined; }\n\turiScheme[scheme.toLowerCase()] = {open, test};\n\treturn true;\n}\n\nexport function clean(scheme: string): void {\n\tif (!(scheme && typeof scheme === 'string')) { return; }\n\tdelete uriScheme[scheme];\n}\n\n/**\n * 打开 URL\n */\nexport async function open(uri?: string, replace?: boolean): Promise<boolean> {\n\tlet schemeName = getUriScheme(uri);\n\tif (!(schemeName && schemeName in uriScheme)) { return false; }\n\tlet scheme = uriScheme[schemeName];\n\treturn Boolean(await scheme.open(uri as string, replace));\n}\n/**\n * 测试 URL 是否被支持\n */\nexport function test(uri?: string): boolean {\n\tlet schemeName = getUriScheme(uri);\n\tif (!(schemeName && schemeName in uriScheme)) { return false; }\n\tlet scheme = uriScheme[schemeName];\n\treturn Boolean(!scheme.test || scheme.test(uri as string));\n}\nfunction getUri(url?: string): string {\n\treturn url || '';\n}\n\nimport { BaseOperObject, Method as CmdMethod } from './cmd';\nexport interface UriOperLike extends BaseOperObject {\n\turi?: string;\n\turl?: string;\n}\nexport interface UriOper extends BaseOperObject {\n\turi: string;\n}\n\nexport const uriMethod: CmdMethod = {\n\tasync exec({ uri, replace, url }: UriOperLike): Promise<boolean> {\n\t\turi = uri || url;\n\t\tif (!uri) { return false; }\n\t\treturn open(uri, replace);\n\t},\n\ttest({ uri, url }: UriOperLike): boolean {\n\t\turi = uri || url;\n\t\tif (!uri) { return false; }\n\t\treturn test(uri || url);\n\t},\n\tcompare(a: UriOperLike, b: UriOperLike): boolean {\n\t\treturn getUri(a.uri || a.url) === getUri(b.uri || b.url) && Boolean(a.replace) === Boolean(b.replace);\n\t},\n\tparse(uri: string): UriOper | undefined { \n\t\tif (uri) {\n\t\t\treturn {uri};\n\t\t}\n\t},\n\tstringify({ uri, url }: UriOperLike): string {\n\t\treturn uri || url || '';\n\t},\n\tnormalize({ uri, replace, url }: UriOperLike): UriOper | undefined {\n\t\treturn { replace, uri: getUri(uri || url) };\n\t},\n};","/** 基本操作信息 */\r\nexport interface BaseOperObject {\r\n\t/** 方法名 */\r\n\tmethod?: string;\r\n\t/** 是否替换当前页面 */\r\n\treplace?: boolean;\r\n\t/** 执行提示 */\r\n\texecTip?: string;\r\n\t/** 执行提示标题 */\r\n\texecTitle?: string;\r\n\t[key: string]: any;\r\n}\r\n/** 操作对象 */\r\nexport interface OperObject extends BaseOperObject {\r\n\tmethod: string;\r\n}\r\n/** 操作类型 */\r\nexport type Oper = OperObject | string | undefined;\r\n\r\n/**\r\n * 处理方法\r\n */\r\nexport interface Method {\r\n\t/**\r\n\t * 执行操作\r\n\t * @param obj 要执行的操作\r\n\t */\r\n\texec(this: Method, obj: BaseOperObject): Promise<boolean>;\r\n\t/**\r\n\t * 测试操作是否合法\r\n\t * @param obj 要测试的操作\r\n\t */\r\n\ttest?(this: Method, obj: BaseOperObject): boolean;\r\n\t/**\r\n\t * 比较两个操作是否相同\r\n\t * @param obj1 要比价的操作\r\n\t * @param obj2 要比较的操作\r\n\t */\r\n\tcompare?(this: Method, obj1: BaseOperObject, obj2: BaseOperObject): boolean;\r\n\t/**\r\n\t * 解析操作字符串\r\n\t * @param s 要解析的操作字符串\r\n\t */\r\n\tparse?(this: Method, s: string): BaseOperObject | undefined;\r\n\t/**\r\n\t * 操作转为字符串\r\n\t * @param obj 要转为字符串的操作\r\n\t */\r\n\tstringify?(this: Method, obj: BaseOperObject): string;\r\n\t/**\r\n\t * 操作规范化\r\n\t * @param obj 要规范化的操作\r\n\t */\r\n\tnormalize?(this: Method, obj: BaseOperObject): BaseOperObject | undefined;\r\n}\r\nlet methods = {};\r\nlet execHook: ((oper: OperObject) => Promise<boolean> | boolean) | undefined;\r\n/**\r\n * 设置执行钩子\r\n * @param hook 执行钩子\r\n */\r\nexport function setHook(hook: ((oper: OperObject) => Promise<boolean> | boolean) | undefined) {\r\n\texecHook = hook;\r\n}\r\n/**\r\n * 执行操作函数(执行操作)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj 要执行的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'exec', def: boolean | Promise<boolean>, obj: OperObject): boolean | Promise<boolean>;\r\n/**\r\n * 执行操作函数(测试操作是否合法)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj 要测试的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'test', def: boolean, obj: OperObject): boolean;\r\n/**\r\n * 执行操作函数(比较两个操作是否相同)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj1 要比价的操作\r\n * @param obj2 要比较的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'compare', def: boolean, obj1: OperObject, obj2: OperObject): boolean;\r\n/**\r\n * 执行操作函数(解析操作字符串)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param s 要解析的操作字符串\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'parse', def: OperObject | undefined, s: string): OperObject | undefined;\r\n/**\r\n * 执行操作函数(操作转为字符串)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj 要转为字符串的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'stringify', def: string, obj: OperObject): string;\r\n/**\r\n * 执行操作函数(操作规范化)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj 要规范化的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'normalize', def: OperObject, obj: OperObject): OperObject | undefined;\r\nfunction execOperFunc<F extends keyof Method>(methodName: string, funcName: F, def: Method[F], ...args: any[]): Method[F] {\r\n\tif (!(methodName in methods)) { return def; }\r\n\tconst method = methods[methodName];\r\n\tconst func = method[funcName];\r\n\tif (!func) {return def; }\r\n\ttry {\r\n\t\treturn func.call(method, ...args);\r\n\t} catch(e) {\r\n\t\treturn def;\r\n\t}\r\n\r\n}\r\n\r\n//文本参数一览表\r\nlet operation:{[key:string]: OperObject} = {}\r\n\r\n/**\r\n * 比较两个操作是否相同\r\n * @param obj1 要比价的操作\r\n * @param obj2 要比较的操作\r\n */\r\nexport function compare(a: Oper, b: Oper): boolean {\r\n\ta = parse(a);\r\n\tif (!(a && typeof a === 'object')) { return false; }\r\n\tb = parse(b);\r\n\tif (!(b && typeof b === 'object')) { return false; }\r\n\tif (a.method !== b.method) {return false;}\r\n\r\n\treturn Boolean(execOperFunc(a.method, 'compare', false, a, b));\r\n}\r\n\r\n/**\r\n * 操作规范化\r\n * @param obj 要规范化的操作\r\n */\r\nexport function normalize(oper: Oper): OperObject | undefined {\r\n\t//获取参数对象\r\n\toper = parse(oper);\r\n\tif (!(oper && oper instanceof Object)) { return; }\r\n\r\n\tlet {method, replace, execTip, execTitle, } = oper;\r\n\tif (!(method in methods)) { return; }\r\n\r\n\toper = Object.assign({}, oper);\r\n\tdelete oper.execTip; delete oper.execTitle;\r\n\r\n\toper = execOperFunc(method, 'normalize', oper, oper);\r\n\tif (!oper) { return; }\r\n\r\n\toper.method = method;\r\n\tif (replace) { oper.replace = true; }\r\n\telse { delete oper.replace; }\r\n\r\n\tif (execTip && typeof execTip === 'string') {\r\n\t\toper.execTip = execTip;\r\n\t\tif (execTitle && typeof execTitle === 'string') {\r\n\t\t\toper.execTitle = execTitle;\r\n\t\t}\r\n\t}\r\n\r\n\treturn oper;\r\n}\r\n\r\n/**\r\n * 操作转为字符串\r\n * @param oper 要转为字符串的操作\r\n */\r\nexport function stringify(oper: Oper): string {\r\n\tif (typeof oper === 'string') { return oper; }\r\n\tif (!(oper && typeof oper === 'object')) { return ''; }\r\n\tlet { method, replace } = oper;\r\n\tif (!(method && typeof method === 'string')) { return ''; }\r\n\r\n\toper = execOperFunc(method, 'stringify', '', oper);\r\n\r\n\tif (typeof oper !== 'string') { return ''; }\r\n\tif (method !== 'exec') { oper = oper ? method + ':' + oper : ':' + oper;}\r\n\tif (oper && replace && oper[0] !== '@') {oper = '@' + oper;}\r\n\treturn oper;\r\n}\r\n\r\n/**\r\n * 获取实际参数对象\r\n * @param   oper 文本型参数\r\n */\r\nexport function parse(oper: Oper): OperObject | undefined {\r\n\tif (typeof oper !== 'string') { return oper;}\r\n\tlet replace: boolean = false, method: string = '';\r\n\r\n\tif (oper[0] == '@') { replace = true; oper = oper.substr(1); }\r\n\twhile (oper[0] == '@') { oper = oper.substr(1); }\r\n\tif (oper.indexOf(':') !== -1) {\r\n\t\tlet i = oper.indexOf(':');\r\n\t\tlet v = decodeURIComponent(oper.substr(i + 1));\r\n\t\tlet k = decodeURIComponent(oper.substr(0, i));\r\n\t\tif (!k) { k = v; v = ''; }\r\n\r\n\t\tmethod = k;\r\n\t\toper = execOperFunc(method, 'parse', undefined, v);\r\n\t} else if (oper in operation) {\r\n\t\toper = operation[oper];\r\n\t}\r\n\tif (!(oper && typeof oper === 'object')) { return; }\r\n\tif (method) { oper.method = method;}\r\n\tif (replace) { oper.replace = replace;}\r\n\treturn oper;\r\n}\r\n\r\n/**\r\n * 执行路由参数\r\n * @param oper 参数\r\n */\r\nexport async function exec(oper: Oper): Promise<boolean> {\r\n\t//获取参数对象\r\n\toper = parse(oper);\r\n\tif (!(oper && oper instanceof Object)) { return false; }\r\n\tlet { method } = oper;\r\n\tif (!(method in methods)) { return false; }\r\n\tif (typeof execHook === 'function' && !await execHook(oper)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn Boolean(await execOperFunc(method, 'exec', false, oper));\r\n}\r\n\r\n/**\r\n * 测试操作是否合法\r\n * @param oper 要测试的参数\r\n */\r\nexport function test(oper: Oper): boolean {\r\n\toper = parse(oper);\r\n\tif (!(oper && oper instanceof Object)) { return false; }\r\n\tlet method = oper.method;\r\n\tif (!(method in methods)) { return false; }\r\n\r\n\treturn Boolean(execOperFunc(method, 'test', true, oper));\r\n}\r\n\r\n\r\n\r\n/**\r\n * 设置操作\r\n * @param id 操作id\r\n * @param o 操作数据\r\n */\r\nexport function setOperation(id: string, o: OperObject): void {\r\n\tif (!(id && typeof id === 'string')) { return; }\r\n\tif (!(o && typeof o === 'object')) { return; }\r\n\toperation[id] = o;\r\n}\r\n\r\n/**\r\n * 清除全部操作\r\n */\r\nexport function clearOperation(): void;\r\n/**\r\n * 清除指定操作\r\n * @param id 操作id\r\n */\r\nexport function clearOperation(id: string): void;\r\nexport function clearOperation(id?: string): void {\r\n\tif (!(id && typeof id === 'string')) {\r\n\t\toperation =  {};\r\n\t} else {\r\n\t\tdelete operation[id];\r\n\t}\r\n}\r\n/**\r\n * 设置解析方法\r\n * @param id 方法名称\r\n * @param param 配置\r\n */\r\nexport function setMethod(id: string, {exec, test, compare, parse, stringify, normalize}: Method): void {\r\n\tif (!(id && typeof id === 'string')) { return; }\r\n\tif (typeof exec !== 'function') { return; }\r\n\tmethods[id] = {\r\n\t\texec:\t\texec,\r\n\t\ttest:\t\ttypeof test === 'function' && test || undefined,\r\n\t\tcompare:\ttypeof compare === 'function' && compare || undefined,\r\n\t\tparse:\t\ttypeof parse === 'function' && parse || undefined,\r\n\t\tstringify:\ttypeof stringify === 'function' && stringify || undefined,\r\n\t\tnormalize:\ttypeof normalize === 'function' && normalize || undefined,\r\n\t};\r\n}\r\n/**\r\n * 清除所有解析方法\r\n */\r\nexport function clearMethod(): void;\r\n/**\r\n * 清除指定的解析方法\r\n * @param id 方法名称\r\n */\r\nexport function clearMethod(id: string): void;\r\nexport function clearMethod(id?: string): void {\r\n\tif (!(id && typeof id === 'string')) {\r\n\t\tmethods = {};\r\n\t\treturn;\r\n\t}\r\n\tdelete methods[id];\r\n}\r\n\r\n\r\nexport interface CmdOper extends BaseOperObject {\r\n\t/** 操作信息 */\r\n\texec: Oper;\r\n}\r\n/** 命令操作 */\r\nexport const cmdMethod: Method = {\r\n\tasync exec({ exec: e, replace }: CmdOper): Promise<boolean> {\r\n\t\tif (!e) { return false; }\r\n\t\tif (typeof e === 'string') {\r\n\t\t\treturn exec(replace ? '@' + e : e);\r\n\t\t}\r\n\t\te.replace = e.replace || replace;\r\n\t\treturn exec(e);\r\n\t},\r\n\ttest({ exec: e }: CmdOper):boolean {\r\n\t\treturn test(e);\r\n\t},\r\n\tparse(exec: string): OperObject | undefined {\r\n\t\tif (exec) { return; }\r\n\t\treturn parse(exec);\r\n\t},\r\n\tstringify({ exec }: CmdOper): string {\r\n\t\treturn stringify(exec);\r\n\t},\r\n\tnormalize({ exec, replace }: CmdOper): OperObject | undefined {\r\n\t\texec = normalize(exec);\r\n\t\tif (exec && replace) {\r\n\t\t\texec.replace = replace;\r\n\t\t}\r\n\t\treturn exec as OperObject;\r\n\t},\r\n}\r\n","\r\nimport Event from './event';\r\nimport Timer from './timer';\r\nimport * as util from './util';\r\nimport * as funcctrl from './funcctrl';\r\nimport init from './init';\r\nimport * as uri from './uri';\r\nimport * as cmd from './cmd';\r\nexport {\r\n\tEvent,\r\n\tTimer,\r\n\tutil,\r\n\tfuncctrl,\r\n\tinit,\r\n\turi,\r\n\tcmd,\r\n}\r\n\r\n"],"sourceRoot":""}