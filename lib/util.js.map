{"version":3,"sources":["../src/util.ts"],"names":["copyObject","base","to","Array","map","x","ret","Object","keys","forEach","i","length","String","Boolean","Number","k"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAA0CC,EAA1C,EAA2F;AACjG,MAAI,CAACA,EAAL,EAAS;AACR,QAAI,CAACD,IAAL,EAAW;AAAE,aAAOA,IAAP;AAAc;;AAC3B,QAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAAE;AAAS;;AAC3C,QAAIA,IAAI,YAAYE,KAApB,EAA2B;AAAE,aAAOF,IAAI,CAACG,GAAL,CAASC,CAAC,IAAIL,UAAU,CAACK,CAAD,CAAxB,CAAP;AAAqC;;AAClE,QAAI,OAAOJ,IAAP,KAAgB,QAApB,EAA8B;AAC7B,UAAIK,GAAG,GAAG,EAAV;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYP,IAAZ,EAAkBQ,OAAlB,CAA0BJ,CAAC,IAAIC,GAAG,CAACD,CAAD,CAAH,GAASL,UAAU,CAACC,IAAI,CAACI,CAAD,CAAL,CAAlD;AACA,aAAOC,GAAP;AACA;;AACD,WAAOL,IAAP;AACA;;AACD,MAAI,EAAEA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA1B,CAAJ,EAAyC;AAAE;AAAS;;AACpD,MAAI,EAAEC,EAAE,IAAI,OAAOA,EAAP,KAAc,QAAtB,CAAJ,EAAqC;AAAE;AAAS;;AAChD,MAAIA,EAAE,YAAYC,KAAlB,EAAyB;AACxB,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,EAAE,CAACS,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AACnC,UAAI,EAAEA,CAAC,IAAIT,IAAP,CAAJ,EAAkB;AAAE;AAAW;;AAC/B,cAAQ,OAAOC,EAAE,CAACQ,CAAD,CAAjB;AACC,aAAK,QAAL;AAAgBR,UAAAA,EAAE,CAACQ,CAAD,CAAF,GAAQE,MAAM,CAACX,IAAI,CAACS,CAAD,CAAL,CAAd;AAAyB;;AACzC,aAAK,SAAL;AAAgBR,UAAAA,EAAE,CAACQ,CAAD,CAAF,GAAQG,OAAO,CAACZ,IAAI,CAACS,CAAD,CAAL,CAAf;AAA0B;;AAC1C,aAAK,QAAL;AAAeR,UAAAA,EAAE,CAACQ,CAAD,CAAF,GAAQI,MAAM,CAACb,IAAI,CAACS,CAAD,CAAL,CAAd;AAAyB;;AACxC,aAAK,QAAL;AAAe,cAAIT,IAAJ,EAAU;AAAED,YAAAA,UAAU,CAACC,IAAI,CAACS,CAAD,CAAL,EAAUR,EAAE,CAACQ,CAAD,CAAZ,CAAV;AAA6B;;AAAC;AAJ1D;AAMA;;AACD;AACA;;AACD,OAAK,IAAIK,CAAT,IAAcb,EAAd,EAAkB;AACjB,QAAI,EAAEa,CAAC,IAAId,IAAP,CAAJ,EAAkB;AAAE;AAAW;;AAC/B,YAAQ,OAAOC,EAAE,CAACa,CAAD,CAAjB;AACC,WAAK,QAAL;AAAeb,QAAAA,EAAE,CAACa,CAAD,CAAF,GAAQH,MAAM,CAACX,IAAI,CAACc,CAAD,CAAL,CAAd;AAAyB;;AACxC,WAAK,SAAL;AAAgBb,QAAAA,EAAE,CAACa,CAAD,CAAF,GAAQF,OAAO,CAACZ,IAAI,CAACc,CAAD,CAAL,CAAf;AAA0B;;AAC1C,WAAK,QAAL;AAAeb,QAAAA,EAAE,CAACa,CAAD,CAAF,GAAQD,MAAM,CAACb,IAAI,CAACc,CAAD,CAAL,CAAd;AAAyB;;AACxC,WAAK,QAAL;AAAe,YAAId,IAAJ,EAAU;AAAED,UAAAA,UAAU,CAACC,IAAI,CAACc,CAAD,CAAL,EAAUb,EAAE,CAACa,CAAD,CAAZ,CAAV;AAA6B;;AAAC;AAJ1D;AAMA;AACD","sourcesContent":["export function copyObject(base: Object | any[], to?: Object | any[]): Object | any[] | undefined {\r\n\tif (!to) {\r\n\t\tif (!base) { return base; }\r\n\t\tif (typeof base === 'function') { return; }\r\n\t\tif (base instanceof Array) { return base.map(x => copyObject(x)) }\r\n\t\tif (typeof base === 'object') {\r\n\t\t\tlet ret = {};\r\n\t\t\tObject.keys(base).forEach(x => ret[x] = copyObject(base[x]));\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t\treturn base;\r\n\t}\r\n\tif (!(base && typeof base === 'object')) { return; }\r\n\tif (!(to && typeof to === 'object')) { return; }\r\n\tif (to instanceof Array) {\r\n\t\tfor (let i = 0; i < to.length; i++) {\r\n\t\t\tif (!(i in base)) { continue; }\r\n\t\t\tswitch (typeof to[i]) {\r\n\t\t\t\tcase 'string': \tto[i] = String(base[i]); break;\r\n\t\t\t\tcase 'boolean': to[i] = Boolean(base[i]); break;\r\n\t\t\t\tcase 'number': to[i] = Number(base[i]); break;\r\n\t\t\t\tcase 'object': if (base) { copyObject(base[i], to[i]); } break;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tfor (let k in to) {\r\n\t\tif (!(k in base)) { continue; }\r\n\t\tswitch (typeof to[k]) {\r\n\t\t\tcase 'string': to[k] = String(base[k]); break;\r\n\t\t\tcase 'boolean': to[k] = Boolean(base[k]); break;\r\n\t\t\tcase 'number': to[k] = Number(base[k]); break;\r\n\t\t\tcase 'object': if (base) { copyObject(base[k], to[k]); } break;\r\n\t\t}\r\n\t}\r\n}\r\n"],"file":"util.js"}