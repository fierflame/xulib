{"version":3,"sources":["../src/uri.ts"],"names":["uriScheme","getUriScheme","uri","s","exec","toLowerCase","set","scheme","open","test","undefined","clean","replace","schemeName","Boolean","getUri","url","uriMethod","compare","a","b","parse","stringify","normalize"],"mappings":"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","sourcesContent":["export interface Method {\n\topen(this: Method, uri: string, replace?: boolean): Promise<boolean>;\n\ttest?(this: Method, uri: string): boolean;\n}\n\ntype test = (uri: string) => boolean;\n\nlet uriScheme: { [key: string]: Method } = {};\n/**\n * 获取 URL Scheme\n * @param uri 要获取 Scheme 的 URI\n */\nfunction getUriScheme(uri?: string): string {\n\tif (!uri) { return ''; }\n\tlet [, s] = /^([a-z\\-\\+0-9\\.]+)\\:/i.exec(uri) || [, ''];\n\treturn s.toLowerCase();\n}\n/**\n * 设置 URI 处理方法\n * @param scheme\n */\nexport function set(scheme: string, { open, test }: Method): boolean {\n\tif (!(scheme && typeof scheme === 'string')) { return false; }\n\tif (!(typeof open === 'function')) { return false; }\n\t[, scheme] = /^([a-z\\-\\+0-9\\.]+)\\:?$/i.exec(scheme) || [, ''];\n\tif (!scheme) {return false;}\n\tif (!(typeof test === 'function')) { test = undefined; }\n\turiScheme[scheme.toLowerCase()] = {open, test};\n\treturn true;\n}\n\nexport function clean(scheme: string): void {\n\tif (!(scheme && typeof scheme === 'string')) { return; }\n\tdelete uriScheme[scheme];\n}\n\n/**\n * 打开 URL\n */\nexport async function open(uri?: string, replace?: boolean): Promise<boolean> {\n\tlet schemeName = getUriScheme(uri);\n\tif (!(schemeName && schemeName in uriScheme)) { return false; }\n\tlet scheme = uriScheme[schemeName];\n\treturn Boolean(await scheme.open(uri as string, replace));\n}\n/**\n * 测试 URL 是否被支持\n */\nexport function test(uri?: string): boolean {\n\tlet schemeName = getUriScheme(uri);\n\tif (!(schemeName && schemeName in uriScheme)) { return false; }\n\tlet scheme = uriScheme[schemeName];\n\treturn Boolean(!scheme.test || scheme.test(uri as string));\n}\nfunction getUri(url?: string): string {\n\treturn url || '';\n}\n\nimport { BaseOperObject, Method as CmdMethod } from './cmd';\nexport interface UriOperLike extends BaseOperObject {\n\turi?: string;\n\turl?: string;\n}\nexport interface UriOper extends BaseOperObject {\n\turi: string;\n}\n\nexport const uriMethod: CmdMethod = {\n\tasync exec({ uri, replace, url }: UriOperLike): Promise<boolean> {\n\t\turi = uri || url;\n\t\tif (!uri) { return false; }\n\t\treturn open(uri, replace);\n\t},\n\ttest({ uri, url }: UriOperLike): boolean {\n\t\turi = uri || url;\n\t\tif (!uri) { return false; }\n\t\treturn test(uri || url);\n\t},\n\tcompare(a: UriOperLike, b: UriOperLike): boolean {\n\t\treturn getUri(a.uri || a.url) === getUri(b.uri || b.url) && Boolean(a.replace) === Boolean(b.replace);\n\t},\n\tparse(uri: string): UriOper | undefined { \n\t\tif (uri) {\n\t\t\treturn {uri};\n\t\t}\n\t},\n\tstringify({ uri, url }: UriOperLike): string {\n\t\treturn uri || url || '';\n\t},\n\tnormalize({ uri, replace, url }: UriOperLike): UriOper | undefined {\n\t\treturn { replace, uri: getUri(uri || url) };\n\t},\n};"],"file":"uri.js"}