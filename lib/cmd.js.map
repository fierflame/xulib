{"version":3,"sources":["../src/cmd.ts"],"names":["methods","execHook","setHook","hook","execOperFunc","methodName","funcName","def","args","method","func","call","e","operation","compare","a","b","parse","Boolean","normalize","oper","Object","replace","execTip","execTitle","assign","stringify","substr","indexOf","i","v","decodeURIComponent","k","undefined","exec","test","setOperation","id","o","clearOperation","setMethod","clearMethod","cmdMethod"],"mappings":"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","sourcesContent":["/** 基本操作信息 */\r\nexport interface BaseOperObject {\r\n\t/** 方法名 */\r\n\tmethod?: string;\r\n\t/** 是否替换当前页面 */\r\n\treplace?: boolean;\r\n\t/** 执行提示 */\r\n\texecTip?: string;\r\n\t/** 执行提示标题 */\r\n\texecTitle?: string;\r\n\t[key: string]: any;\r\n}\r\n/** 操作对象 */\r\nexport interface OperObject extends BaseOperObject {\r\n\tmethod: string;\r\n}\r\n/** 操作类型 */\r\nexport type Oper = OperObject | string | undefined;\r\n\r\n/**\r\n * 处理方法\r\n */\r\nexport interface Method {\r\n\t/**\r\n\t * 执行操作\r\n\t * @param obj 要执行的操作\r\n\t */\r\n\texec(this: Method, obj: BaseOperObject): Promise<boolean>;\r\n\t/**\r\n\t * 测试操作是否合法\r\n\t * @param obj 要测试的操作\r\n\t */\r\n\ttest?(this: Method, obj: BaseOperObject): boolean;\r\n\t/**\r\n\t * 比较两个操作是否相同\r\n\t * @param obj1 要比价的操作\r\n\t * @param obj2 要比较的操作\r\n\t */\r\n\tcompare?(this: Method, obj1: BaseOperObject, obj2: BaseOperObject): boolean;\r\n\t/**\r\n\t * 解析操作字符串\r\n\t * @param s 要解析的操作字符串\r\n\t */\r\n\tparse?(this: Method, s: string): BaseOperObject | undefined;\r\n\t/**\r\n\t * 操作转为字符串\r\n\t * @param obj 要转为字符串的操作\r\n\t */\r\n\tstringify?(this: Method, obj: BaseOperObject): string;\r\n\t/**\r\n\t * 操作规范化\r\n\t * @param obj 要规范化的操作\r\n\t */\r\n\tnormalize?(this: Method, obj: BaseOperObject): BaseOperObject | undefined;\r\n}\r\nlet methods = {};\r\nlet execHook: ((oper: OperObject) => Promise<boolean> | boolean) | undefined;\r\n/**\r\n * 设置执行钩子\r\n * @param hook 执行钩子\r\n */\r\nexport function setHook(hook: ((oper: OperObject) => Promise<boolean> | boolean) | undefined) {\r\n\texecHook = hook;\r\n}\r\n/**\r\n * 执行操作函数(执行操作)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj 要执行的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'exec', def: boolean | Promise<boolean>, obj: OperObject): boolean | Promise<boolean>;\r\n/**\r\n * 执行操作函数(测试操作是否合法)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj 要测试的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'test', def: boolean, obj: OperObject): boolean;\r\n/**\r\n * 执行操作函数(比较两个操作是否相同)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj1 要比价的操作\r\n * @param obj2 要比较的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'compare', def: boolean, obj1: OperObject, obj2: OperObject): boolean;\r\n/**\r\n * 执行操作函数(解析操作字符串)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param s 要解析的操作字符串\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'parse', def: OperObject | undefined, s: string): OperObject | undefined;\r\n/**\r\n * 执行操作函数(操作转为字符串)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj 要转为字符串的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'stringify', def: string, obj: OperObject): string;\r\n/**\r\n * 执行操作函数(操作规范化)\r\n * @param methodName 方法名\r\n * @param funcName 执行名称\r\n * @param def 默认返回值\r\n * @param obj 要规范化的操作\r\n */\r\nfunction execOperFunc(methodName: string, funcName: 'normalize', def: OperObject, obj: OperObject): OperObject | undefined;\r\nfunction execOperFunc<F extends keyof Method>(methodName: string, funcName: F, def: Method[F], ...args: any[]): Method[F] {\r\n\tif (!(methodName in methods)) { return def; }\r\n\tconst method = methods[methodName];\r\n\tconst func = method[funcName];\r\n\tif (!func) {return def; }\r\n\ttry {\r\n\t\treturn func.call(method, ...args);\r\n\t} catch(e) {\r\n\t\treturn def;\r\n\t}\r\n\r\n}\r\n\r\n//文本参数一览表\r\nlet operation:{[key:string]: OperObject} = {}\r\n\r\n/**\r\n * 比较两个操作是否相同\r\n * @param obj1 要比价的操作\r\n * @param obj2 要比较的操作\r\n */\r\nexport function compare(a: Oper, b: Oper): boolean {\r\n\ta = parse(a);\r\n\tif (!(a && typeof a === 'object')) { return false; }\r\n\tb = parse(b);\r\n\tif (!(b && typeof b === 'object')) { return false; }\r\n\tif (a.method !== b.method) {return false;}\r\n\r\n\treturn Boolean(execOperFunc(a.method, 'compare', false, a, b));\r\n}\r\n\r\n/**\r\n * 操作规范化\r\n * @param obj 要规范化的操作\r\n */\r\nexport function normalize(oper: Oper): OperObject | undefined {\r\n\t//获取参数对象\r\n\toper = parse(oper);\r\n\tif (!(oper && oper instanceof Object)) { return; }\r\n\r\n\tlet {method, replace, execTip, execTitle, } = oper;\r\n\tif (!(method in methods)) { return; }\r\n\r\n\toper = Object.assign({}, oper);\r\n\tdelete oper.execTip; delete oper.execTitle;\r\n\r\n\toper = execOperFunc(method, 'normalize', oper, oper);\r\n\tif (!oper) { return; }\r\n\r\n\toper.method = method;\r\n\tif (replace) { oper.replace = true; }\r\n\telse { delete oper.replace; }\r\n\r\n\tif (execTip && typeof execTip === 'string') {\r\n\t\toper.execTip = execTip;\r\n\t\tif (execTitle && typeof execTitle === 'string') {\r\n\t\t\toper.execTitle = execTitle;\r\n\t\t}\r\n\t}\r\n\r\n\treturn oper;\r\n}\r\n\r\n/**\r\n * 操作转为字符串\r\n * @param oper 要转为字符串的操作\r\n */\r\nexport function stringify(oper: Oper): string {\r\n\tif (typeof oper === 'string') { return oper; }\r\n\tif (!(oper && typeof oper === 'object')) { return ''; }\r\n\tlet { method, replace } = oper;\r\n\tif (!(method && typeof method === 'string')) { return ''; }\r\n\r\n\toper = execOperFunc(method, 'stringify', '', oper);\r\n\r\n\tif (typeof oper !== 'string') { return ''; }\r\n\tif (method !== 'exec') { oper = oper ? method + ':' + oper : ':' + oper;}\r\n\tif (oper && replace && oper[0] !== '@') {oper = '@' + oper;}\r\n\treturn oper;\r\n}\r\n\r\n/**\r\n * 获取实际参数对象\r\n * @param   oper 文本型参数\r\n */\r\nexport function parse(oper: Oper): OperObject | undefined {\r\n\tif (typeof oper !== 'string') { return oper;}\r\n\tlet replace: boolean = false, method: string = '';\r\n\r\n\tif (oper[0] == '@') { replace = true; oper = oper.substr(1); }\r\n\twhile (oper[0] == '@') { oper = oper.substr(1); }\r\n\tif (oper.indexOf(':') !== -1) {\r\n\t\tlet i = oper.indexOf(':');\r\n\t\tlet v = decodeURIComponent(oper.substr(i + 1));\r\n\t\tlet k = decodeURIComponent(oper.substr(0, i));\r\n\t\tif (!k) { k = v; v = ''; }\r\n\r\n\t\tmethod = k;\r\n\t\toper = execOperFunc(method, 'parse', undefined, v);\r\n\t} else if (oper in operation) {\r\n\t\toper = operation[oper];\r\n\t}\r\n\tif (!(oper && typeof oper === 'object')) { return; }\r\n\tif (method) { oper.method = method;}\r\n\tif (replace) { oper.replace = replace;}\r\n\treturn oper;\r\n}\r\n\r\n/**\r\n * 执行路由参数\r\n * @param oper 参数\r\n */\r\nexport async function exec(oper: Oper): Promise<boolean> {\r\n\t//获取参数对象\r\n\toper = parse(oper);\r\n\tif (!(oper && oper instanceof Object)) { return false; }\r\n\tlet { method } = oper;\r\n\tif (!(method in methods)) { return false; }\r\n\tif (typeof execHook === 'function' && !await execHook(oper)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn Boolean(await execOperFunc(method, 'exec', false, oper));\r\n}\r\n\r\n/**\r\n * 测试操作是否合法\r\n * @param oper 要测试的参数\r\n */\r\nexport function test(oper: Oper): boolean {\r\n\toper = parse(oper);\r\n\tif (!(oper && oper instanceof Object)) { return false; }\r\n\tlet method = oper.method;\r\n\tif (!(method in methods)) { return false; }\r\n\r\n\treturn Boolean(execOperFunc(method, 'test', true, oper));\r\n}\r\n\r\n\r\n\r\n/**\r\n * 设置操作\r\n * @param id 操作id\r\n * @param o 操作数据\r\n */\r\nexport function setOperation(id: string, o: OperObject): void {\r\n\tif (!(id && typeof id === 'string')) { return; }\r\n\tif (!(o && typeof o === 'object')) { return; }\r\n\toperation[id] = o;\r\n}\r\n\r\n/**\r\n * 清除全部操作\r\n */\r\nexport function clearOperation(): void;\r\n/**\r\n * 清除指定操作\r\n * @param id 操作id\r\n */\r\nexport function clearOperation(id: string): void;\r\nexport function clearOperation(id?: string): void {\r\n\tif (!(id && typeof id === 'string')) {\r\n\t\toperation =  {};\r\n\t} else {\r\n\t\tdelete operation[id];\r\n\t}\r\n}\r\n/**\r\n * 设置解析方法\r\n * @param id 方法名称\r\n * @param param 配置\r\n */\r\nexport function setMethod(id: string, {exec, test, compare, parse, stringify, normalize}: Method): void {\r\n\tif (!(id && typeof id === 'string')) { return; }\r\n\tif (typeof exec !== 'function') { return; }\r\n\tmethods[id] = {\r\n\t\texec:\t\texec,\r\n\t\ttest:\t\ttypeof test === 'function' && test || undefined,\r\n\t\tcompare:\ttypeof compare === 'function' && compare || undefined,\r\n\t\tparse:\t\ttypeof parse === 'function' && parse || undefined,\r\n\t\tstringify:\ttypeof stringify === 'function' && stringify || undefined,\r\n\t\tnormalize:\ttypeof normalize === 'function' && normalize || undefined,\r\n\t};\r\n}\r\n/**\r\n * 清除所有解析方法\r\n */\r\nexport function clearMethod(): void;\r\n/**\r\n * 清除指定的解析方法\r\n * @param id 方法名称\r\n */\r\nexport function clearMethod(id: string): void;\r\nexport function clearMethod(id?: string): void {\r\n\tif (!(id && typeof id === 'string')) {\r\n\t\tmethods = {};\r\n\t\treturn;\r\n\t}\r\n\tdelete methods[id];\r\n}\r\n\r\n\r\nexport interface CmdOper extends BaseOperObject {\r\n\t/** 操作信息 */\r\n\texec: Oper;\r\n}\r\n/** 命令操作 */\r\nexport const cmdMethod: Method = {\r\n\tasync exec({ exec: e, replace }: CmdOper): Promise<boolean> {\r\n\t\tif (!e) { return false; }\r\n\t\tif (typeof e === 'string') {\r\n\t\t\treturn exec(replace ? '@' + e : e);\r\n\t\t}\r\n\t\te.replace = e.replace || replace;\r\n\t\treturn exec(e);\r\n\t},\r\n\ttest({ exec: e }: CmdOper):boolean {\r\n\t\treturn test(e);\r\n\t},\r\n\tparse(exec: string): OperObject | undefined {\r\n\t\tif (exec) { return; }\r\n\t\treturn parse(exec);\r\n\t},\r\n\tstringify({ exec }: CmdOper): string {\r\n\t\treturn stringify(exec);\r\n\t},\r\n\tnormalize({ exec, replace }: CmdOper): OperObject | undefined {\r\n\t\texec = normalize(exec);\r\n\t\tif (exec && replace) {\r\n\t\t\texec.replace = replace;\r\n\t\t}\r\n\t\treturn exec as OperObject;\r\n\t},\r\n}\r\n"],"file":"cmd.js"}